				##################################################
				#	hwwcpumo.sh	##########################
				#  This is a real time CPU utilization monitor ###
				# How to monitor CPU utilization? When it whent### 
				# to above 98% critical, 90-98 WARNING, below 90%#
				# then it should not send any alert            ###
				##################################################
#! /bin/bash

function psCPUsageAlert(){
	reportFile="/tmp/top_cpu_util_report"
	touch $reportFile
	cpu_upper_threshold=75
	psString=""
	top -b -n 1|sed -e "1,7d"|while read line;
	do
		cpu_utilization=$(echo $line| awk '{print $9}'|cut -d"." -f 1)
		#echo $line|awk '{print $9}'
		#echo $cpu_utilization
		ps_name=$(echo $line| awk '{print $12}')
		if [ ! -z "$cpu_utilization" ];then
		if [ "$cpu_utilization" -ge "$cpu_upper_threshold" ];
		then
			echo "$ps_name --> $cpu_utilization"|tee -a $reportFile
			psString=$psString$ps_name
		#else
			#echo "Into the else stmt"
		fi
		#else
			#echo "Outer else"
		fi
	done
	if [ -n $psString ]
	then
		echo -e "The CPU Usage Alert-->CAUSE-->$psString\n For details find the attachment"|mail -a "$reportFile" -s "Process CPU Alert" -c "jarafat@harriswebworks.com" "jahidapon@gmail.com"
	fi
	
	rm -f $reportFile
}

function CPUsageAlert_logging(){
	PATHS="/"
	HOSTNAME=$(hostname)
	CRITICAL=98
	WARNING=90
	CRITICALMail="jarafat@harriswebworks.com"
	WARNINGMail="jarafat@harriswebworks.com"
	NORMALMail="jarafat@harriswebworks.com"

	mkdir -p /var/log/hwwcpuutil
	LOGFILE=/var/log/hwwcpuutil/cpuusage-`date +%h%d%y`.log

	touch $LOGFILE
	for path in $PATHS
	do
		CPULOAD=`top -b -n 2 -d1 |grep "Cpu(s)"|tail -n 1 | awk '{print $2}'|awk -F. '{print $1}'`
		if [ -n $WARNING -a -n $CRITICAL ];then
		if [ "$CPULOAD" -ge "$WARNING" -a "$CPULOAD" -lt "$CRITICAL" ];then
			echo "`date "+%F %H:%M:%S"` WARNING - $CPULOAD on Host $HOSTNAME" >> $LOGFILE
			echo "Warning CPULOAD $CPULOAD Host is $HOSTNAME"| mail -s "CPULOAD is Warning" $WARNINGMail
			exit 1
		elif [ "$CPULOAD" -ge "$CRITICAL" ];then
			echo "`date "+%F %H:%M:%S"` CRITICAL - $CPULOAD on Host $HOSTNAME" >> $LOGFILE
			echo "Critical CPULOAD $CPULOAD Host is $HOSTNAME"| mail -s "CPULOAD is Critical" $CRITICALMail
			exit 2
		else
			echo "`date "+%F %H:%M:%S"` OK - $CPULOAD on $HOSTNAME" >> $LOGFILE
			echo "Normal CPULOAD $CPULOAD Host is $HOSTNAME"| mail -s "CPULOAD is Normal" $NORMALMail
			exit 0
		fi
		fi
	done
}

echo "###########    Welcome to the HWWSYSMONITOR SYSTEM (version 1.0) ################"
# PART-1: clear the screen
clear

# PART-2: General instruction on the first usage of this of this hww cpu monitor system
echo "This file will generate log files /var/log/hwwcpuutil"
echo "You are going to receive a mail to your mail box from the root user"

# PART-2: unset the following varibales which the program going to use for the information manupulation
#unset hwwreset os architecture kernelrelease internalip externalip nameservers loadaverage

# PART-3:install the system as root user using the following command and check the version
# ./hwwcpumon.sh -i (This can only be installed as root user)
# ./hwwcpumon.sh -v (For chechking the version, can be checked by any user)
while getopts iv name
do
        case $name in
                i)iopt=1;;
                v)vopt=1;;
                *)echo "Invalid arguments, Usage ./hwwcpumon.sh -i or ./hwwcpumon.sh -v"
        esac
done
# PART-3(a): Writing the installation code, remember the shell you are using is bourne (bash)
# Purpose: I am going to copy the file named hwwcpumon.sh into /usr/bin/hwwcpumon to make is executable for everyone
if [[ ! -z $iopt ]]
then
        wd=$(pwd)
        basename "$(test -L "$0" && readlink "$0" || echo "$0")" > /tmp/scriptname
        scriptname=$(echo -e -n $wd/ && cat /tmp/scriptname)
        su -c "cp $scriptname /usr/bin/hwwcpumon" root && echo "Congratulations! Script Installed, mow run the hwwcpumon Command from any user" || echo "Installation failed"
fi

#PART-3(b): Writing code for checking the installation version
#Usage : ./hwwcpumon.sh -v
if [[ ! -z $vopt ]]
then
        echo -e "Harris Web Works CPU Load Monitor Version 1.0\nDesigned by Jahid Arafat, Assistant Professor, Army University, Cumilla Cantonemnt, Bangladesh\nReleased Under Apache 2.0 License (yet to, better not to release it publicly)"
fi

if [[ $# -eq 0 ]]
then
{
	# Per Process CPU Usage Alert
	psCPUsageAlert

	# Total CPU Usage Alert
	CPUsageAlert_logging	
# removing the tempory files generated by the program
rm /tmp/scriptname
}

fi
shift $((OPTIND - 1))

# Instruction regarding how to modify the cronjob to report the CPU usage percentage to the system administrator in every 05 minutes
# cat /etc/crontab
# crontab -e
# */5 * * * * hwwcpumon


