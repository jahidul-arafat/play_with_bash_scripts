user  jahid;
worker_processes  auto;
worker_rlimit_nofile 100000;

## Load Dynamic Modules ##
#load_module modules/ngx_pagespeed.so;
#load_module modules/ngx_http_geoip_module.so;
#load_module modules/ngx_http_perl_module.so;
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

pid        /var/run/nginx.pid;

events {
    worker_connections  10524;    
    multi_accept on;
    accept_mutex off;
    }

http   {
    index         index.html index.php;
    include       mime.types;
    default_type  application/octet-stream;
   
    #geoip_country /usr/share/GeoIP/GeoIP.dat;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $bytes_sent "$http_referer" "$http_user_agent" - "$request_id"';
# log_format  error403  '$remote_addr - [$time_local] "$request" "$http_user_agent" - "$request_id" - "$geoip_country_code"';

  ## Nginx amplify metrics
#    log_format  main_ext '$remote_addr - $remote_user [$time_local] "$request" '
#                         '$status $body_bytes_sent "$http_referer" '
#                         '"$http_user_agent" "$http_x_forwarded_for" '
#                         '"$host" sn="$server_name" '
#                         'rt=$request_time '
#                         'ua="$upstream_addr" us="$upstream_status" '
#                         'ut="$upstream_response_time" ul="$upstream_response_length" '
#                         'cs=$upstream_cache_status' ;
	
    ## Enable POST logging in admin and mask passwords
    # log_format adminpost '$remote_addr - "$http_x_forwarded_for" $remote_user [$time_local] "$request" "$http_referer" "$http_user_agent" "$masked_post_pwd_data"';
    # perl_set $masked_post_pwd_data '
    #            sub {
    #                    my $r = shift;
    #                    my $req =  $r->request_body;
    	### test either one line below or create different regex
    	##  $req =~ s/password(%5D|_.+?)?\=\w+/PASSWORD_REMOVED/g;
    	##  $req =~ s/password.+/PASSWORD_REMOVED/g;
    #                    return $req;
    #                } ';

    access_log off;
    log_not_found     off;
    access_log  /var/log/nginx/access.log  main; #if=$writelog;
    error_log   /var/log/nginx/error.log  error;
	
    
    autoindex		off;
    server_tokens       off;
    port_in_redirect	off;
    sendfile            on;
    sendfile_max_chunk 512k;
    tcp_nopush          on;
    tcp_nodelay         on;
    
    #client_max_body_size 16m;
    client_max_body_size 64m;
    client_body_buffer_size 128k;
    client_header_buffer_size 16k;
    large_client_header_buffers 4 16k;
    
    
    
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    
    
    
    
    fastcgi_buffer_size 32k;
    fastcgi_buffers 4 16k;
	fastcgi_busy_buffers_size 32k;
    
    proxy_buffer_size 32k;
    proxy_buffers 4 16k;
    proxy_busy_buffers_size 32k;
	
    # Microcache
    #proxy_cache_path /tmp/nginx levels=1:2 keys_zone=microcache:100M max_size=500M inactive=2h;
    proxy_cache_path /tmp/disk1 levels=1:2 keys_zone=cache_1:256m max_size=1024G inactive=1d 
                     use_temp_path=off;
    proxy_cache_path /tmp/disk2 levels=1:2 keys_zone=cache_2:256m max_size=1024G inactive=1d 
                     use_temp_path=off;
    proxy_cache_path /tmp/disk3 levels=1:2 keys_zone=cache_3:256m max_size=1024G inactive=1d 
                     use_temp_path=off;
    
    split_clients $request_uri $disk {
        33.3%     1;
        33.3%     2;
        *         3;
    }
    
    
    ## Flood protection example (see conf_m2/extra_protect.conf)
    limit_req_zone $binary_remote_addr zone=zone1:35m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=zone2:35m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=zone3:35m rate=1r/s;

    ## Cache open FD
    open_file_cache max=35000 inactive=30s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    
    ##  SSL global settings
    ssl_session_cache	shared:SSL:45m;
    ssl_session_timeout	30m;
    
    # Enable session tickets
    ssl_session_tickets on;
    
    ssl_protocols		TLSv1.2 TLSv1.3;
    ssl_ciphers                "ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:!3DES:!aNULL:!MD5";
    ssl_prefer_server_ciphers	on;
    #ssl_dhparam 		/etc/ssl/certs/dhparams.pem;
    #ssl_ecdh_curve		secp384r1;
    ssl_buffer_size		4k;
    
    ssl_stapling on;
    ssl_stapling_verify on;
    #ssl_trusted_certificate	/etc/letsencrypt/live/rubi.harriswebworks.com/chain.pem;
    #resolver 8.8.8.8 8.8.4.4 valid=3600s;
    #resolver_timeout 5s;
	
    ## Get real ip from proxy
    set_real_ip_from 127.0.0.1;

     ## ROUTE TO BACKEND NODES
     #upstream php-backend {
     #hash $remote_addr consistent;
     #least_conn;
     #   include /etc/nginx/backend.conf;
     #}
		
     ## ROUTE TO ADMIN NODE
     #upstream admin {
     #hash $remote_addr consistent;
     #least_conn;
     #   server 10.x.x.x;
     #   server 10.x.x.x;
     #}

     #upstream varnish { server 127.0.0.1:8081; }
	
    ## Main domain configuration
    include /etc/nginx/sites-enabled/*.conf;

}
